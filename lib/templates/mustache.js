// Generated by CoffeeScript 1.6.2
(function() {
  var Q, compile, context, mu, path, view;

  Q = require('q');

  path = require('path');

  mu = require('mu');

  context = require('../context');

  compile = function(path, context) {
    var deffered;

    deffered = Q.defer();
    fs.readFile(path, 'utf8', function(err, data) {
      var buffer, stream;

      if (err) {
        return deffered.fail(err);
      }
      buffer = '';
      stream = mu.compileText(data)(context);
      stream.addListener('data', function(c) {
        return buffer += c;
      });
      return stream.addListener('end', function() {
        return deffered.resolve(buffer);
      });
    });
    return deffered.promise;
  };

  view = function(name, options) {
    var layout, result;

    if (options == null) {
      options = {};
    }
    path = this.resolve(name);
    result = compile(path, this);
    layout = options.layout;
    if (layout == null) {
      layout = this.settings.layout;
    }
    if (layout) {
      result = compile(layout, {
        body: result
      });
    }
    return result;
  };

  require.extensions['.mustache'] = function(module, filename) {};

  require.extensions['.mu'] = function(module, filename) {};

  context.include({
    mustache: view,
    mu: view
  });

  module.exports = compile;

}).call(this);
